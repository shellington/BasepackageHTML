/* Table of Contents
==================================================
    
    #grid general
    #grid title boxes
	#grid overlay
	#grid text hover
	#grid sizes

   ==================================================
*/

/* ==========================================================================
#grid general
========================================================================== */

.grid {
	a {
		position: relative;
		display: block;
		text-decoration: none;
	}
	.grid-item {
		@include spread-value(margin-top, 20px, 40px);
	}
}

.grid-pagination {
	@include spread-value(margin-top, 20px, 40px);
}

/* ==========================================================================
#grid title boxes
========================================================================== */

.grid.grid-title-boxes {
	a {
		h4 {
			padding: 15px 10px;
			background: $link-color;
			color:#fff;
			font-size: 17px;
			line-height: 1.3;
		}
		&:hover {
			h4 {
				background: $link-hover-color;
			}
		}
	}
}

/* ==========================================================================
#grid overlay
========================================================================== */

.grid.grid-overlay {
	.overlay {
		position: absolute;
		width:100%;
		height:100%;
		/* Fallback for browsers that doesn't support rgba */
	    background: rgb(0, 0, 0) transparent;
	    /* rgba with 0.6 opacity */
	    background: rgba(0, 0, 0, 0.5);
	    /* For IE 5.5 - 7 */
	    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#7f000000, endColorstr=#7f000000);
	    /* For IE 8 */
	    -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#7f000000, endColorstr=#7f000000)";
	    left:0;
	    top:0;    
	}
}

/* ==========================================================================
#grid text-hover
========================================================================== */

.grid.grid-text-hover {
	.grid-item > div {
		position: relative;
	}
	.overlay {
		opacity: 0;
		background: $link-color;
		color:#fff;
		padding:20px 10px;
		position: absolute;
		width:100%;
		height:100%;
		left:0;
		top:0;
		text-align: center;

		h3 {
			font-size:$font-size-h4;
			color:#fff;
			margin-bottom: 8px;
		}
		h4 {
			font-size: $font-size-h4;
			margin-bottom: 8px;
			color:#fff;
		}	
		p {
			margin-bottom: 0;
			font-size:14px;
			margin-bottom: 8px;
		}
		a {
			color:#fff;
			padding: 0 10px;
			&:hover {
				color:$link-hover-color;
			}
			i {
				font-size: $font-size-h4;
			}
		}
	}
	.grid-item > div:hover .overlay,
	.grid-item > div:active .overlay {
		opacity: 1;
	}
}

/* ==========================================================================
#grid sizes / clears
========================================================================== */


.grid-item {
	// xs clears
	&.col-xs-6 {
		@media (max-width: $screen-xs - 1) {
			// clear previous
			&:nth-of-type(3n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}	
			// set new
			&:nth-of-type(2n+1) {clear: left;}
		}
	}
	&.col-xs-4 {
		@media (max-width: $screen-xs - 1) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}	
			// set new
			&:nth-of-type(3n+1) {clear: left;}
		}
	}
	&.col-xs-3 {
		@media (max-width: $screen-xs - 1) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(3n+1) {clear: none;}	
			// set new
			&:nth-of-type(4n+1) {clear: left;}
		}
	}
	// ms clears
	&.col-ms-6 {
		@media (min-width: $screen-xs) and (max-width: $screen-sm - 1) {
			// clear previous
			&:nth-of-type(3n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}	
			// set new
			&:nth-of-type(2n+1) {clear: left;}
		}
	}
	&.col-ms-4 {
		@media (min-width: $screen-xs) and (max-width: $screen-sm - 1) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}	
			// set new
			&:nth-of-type(3n+1) {clear: left;}
		}
	}
	&.col-ms-3 {
		@media (min-width: $screen-xs) and (max-width: $screen-sm - 1) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(3n+1) {clear: none;}	
			// set new
			&:nth-of-type(4n+1) {clear: left;}
		}
	}
	// sm clears
	&.col-ms-6,
	&.col-sm-6 {
		@media (min-width: $screen-sm) and (max-width: $screen-md - 1) {
			// clear previous
			&:nth-of-type(3n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}	
			// set new
			&:nth-of-type(2n+1) {clear: left;}
		}
	}
	&.col-ms-4,
	&.col-sm-4 {
		@media (min-width: $screen-sm) and (max-width: $screen-md - 1) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}
			// set new
			&:nth-of-type(3n+1) {clear: left;}
		}
	}
	&.col-ms-3,
	&.col-sm-3 {
		@media (min-width: $screen-sm) and (max-width: $screen-md - 1) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(3n+1) {clear: none;}
			// set new
			&:nth-of-type(4n+1) {clear: left;}
		}
	}
	// md clears
	&.col-ms-6,
	&.col-sm-6,
	&.col-md-6 {
		@media (min-width: $screen-md) and (max-width: $screen-lg - 1) {
			// clear previous
			&:nth-of-type(3n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}	
			// set new		
			&:nth-of-type(2n+1) {clear: left;}
		}
	}
	&.col-ms-4,
	&.col-sm-4,
	&.col-md-4 {
		@media (min-width: $screen-md) and (max-width: $screen-lg - 1) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}
			// set new
			&:nth-of-type(3n+1) {clear: left;}
		}
	}
	&.col-ms-3,
	&.col-sm-3,
	&.col-md-3 {
		@media (min-width: $screen-md) and (max-width: $screen-lg - 1) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(3n+1) {clear: none;}
			// set new
			&:nth-of-type(4n+1) {clear: left;}
		}
	}

	// lg clears
	&.col-ms-6,
	&.col-sm-6,
	&.col-md-6,
	&.col-lg-6 {
		@media (min-width: $screen-lg) {
			// clear previous
			&:nth-of-type(3n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}	
			// set new
			&:nth-of-type(2n+1) {clear: left;}
		}
	}
	&.col-ms-4,
	&.col-sm-4,
	&.col-md-4,
	&.col-lg-4 {
		@media (min-width: $screen-lg) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(4n+1) {clear: none;}	
			// set new
			&:nth-of-type(3n+1) {clear: left;}
		}
	}
	&.col-ms-3,
	&.col-sm-3,
	&.col-md-3,
	&.col-lg-3 {
		@media (min-width: $screen-lg) {
			// clear previous
			&:nth-of-type(2n+1) {clear: none;}
			&:nth-of-type(3n+1) {clear: none;}	
			// set new
			&:nth-of-type(4n+1) {clear: left;}
		}
	}
}